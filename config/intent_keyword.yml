nameko:
  AMQP_URI: "amqp://toni:@rabbit.lan:5672/alexander-services"
  rpc_exchange: "nameko-rpc"
  max_workers: 1
  prefetch_count: 1
  serializer: "datetimejson"
  heartbeat: 15
  connection_timeout: 5.0
  rpc_timeout: 10.0
  # Metrics - needs to upper case
  WEB_SERVER_ADDRESS: 0.0.0.0:8000
  TRANSPORT_OPTIONS:
      max_retries: 0,
      interval_start: 2,
      interval_step: 1,
      interval_max: 5


instance:
  map:
    - key: ping
      intent: ping


LOGGING:
  version: 1

  formatters:
    simple:
      format: "%(levelname)s %(message)s"

    prod:
      format: "%(asctime)s.%(msecs)03dZ %(levelname)-8s [%(name)s%(function)s] %(message)s"
      "()": "seta.utils.UTCLogFormatter"
      datefmt: "%Y-%m-%dT%H:%M:%S"

    colored:
      "()": "seta.utils.UTCColoredLogFormatter"
      "format":
        "%(blue,bold)s%(asctime)s.%(msecs)03dZ%(reset)s %(log_color)s%(levelname)-8s%(reset)s%(blue)s[%(name)s%(function)s]%(reset)s %(message_log_color)s%(message)s"
      "datefmt": "%Y-%m-%dT%H:%M:%S"
      "log_colors":
        "DEBUG": "cyan"
        "INFO": "green"
        "WARNING": "white,bg_yellow"
        "ERROR": "yellow,bg_red"
        "CRITICAL": "yellow,bg_red"
      "secondary_log_colors":
        "message":
          "DEBUG": "cyan"
          "INFO": "green"
          "WARNING": "yellow"
          "ERROR": "red"
          "CRITICAL": "red,bg_white"

    colored_thread:
      "()": "seta.utils.UTCColoredLogFormatter"
      "format":
        "%(blue,bold)s%(asctime)s.%(msecs)03dZ%(reset)s %(log_color)s%(levelname)-8s%(reset)s%(blue)s[%(thread)d:%(name)s%(function)s]%(reset)s %(message_log_color)s%(message)s"
      "datefmt": "%Y-%m-%dT%H:%M:%S"
      "log_colors":
        "DEBUG": "cyan"
        "INFO": "green"
        "WARNING": "white,bg_yellow"
        "ERROR": "yellow,bg_red"
        "CRITICAL": "yellow,bg_red"
      "secondary_log_colors":
        "message":
          "DEBUG": "cyan"
          "INFO": "green"
          "WARNING": "yellow"
          "ERROR": "red"
          "CRITICAL": "red,bg_white"

  filters:
    my:
      "()": "flotils.logable.FunctionFilter"

  handlers:
    "null":
      level: INFO
      class: "logging.NullHandler"

    console:
      level: DEBUG
      formatter: colored
      class: logging.StreamHandler
      filters: [ "my" ]

  disable_existing_loggers: false

  root:
    handlers: [ console ]
    level: DEBUG

  loggers:
    amqp:
      level: INFO
    "amqp.connection.Connection.heartbeat_tick":
      level: INFO
    nameko:
      level: INFO
    "nameko_prometheus.dependencies":
      level: INFO
    alexander_fw:
      level: DEBUG
